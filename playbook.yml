- name: Configure Raspberry Pis for theater network
  hosts: pis
  become: true
  tasks:
    - name: Update apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Ensure git is installed
      apt:
        name: git
        state: present

    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Ensure .ssh directory exists
      file:
        path: "/home/{{ ansible_user }}/.ssh"
        state: directory
        mode: '0700'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    # This is bad practice and should crate the key on the server itself
    # TODO: Update to create keys on server
    - name: Copy private SSH key to Pi
      copy:
        src: /Users/{{ ansible_user }}/.ssh/github_rpi  # Replace with actual absolute path
        dest: "/home/{{ ansible_user }}/.ssh/id_ed25519"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
    
    - name: Copy public SSH key to Pi
      copy:
        src: /Users/{{ ansible_user }}/.ssh/github_rpi.pub  # Replace with your username
        dest: "/home/{{ ansible_user }}/.ssh/id_ed25519.pub"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Ensure GitHub SSH config exists
      blockinfile:
        path: "/home/{{ ansible_user }}/.ssh/config"
        create: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
        block: |
          Host github.com
            IdentityFile ~/.ssh/id_ed25519
            User git
            StrictHostKeyChecking no

    - name: Check if a reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Reboot the system if required
      reboot:
        msg: "Rebooting after upgrade"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
      when: reboot_required.stat.exists
